
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;

/**
 * Filename: sTrangWk9Flight
 *
 * Programmer: Sydney Trang
 *
 * Course: ICS4UE
 *
 * Date Started: Sat. Apr. 14/18
 *
 * Description: An Airline Points application uses ArrayLists to add passengers,
 * list passengers, total points, and determines if a specific passenger
 * qualifies for bonus points.
 *
 * Due Date: Sun. Apr. 15/18
 *
 * Modifications: Error handling for empty input fields. Lets a user know that
 * the records are empty if list button is pressed. Error handling if user adds
 * an ID # that matches another in the records. Nulls all text fields after
 * successful inputs. A custom function for creating pseudo-random ID #s for
 * passengers. A remove button. The total points and remove methods uses ID #s.
 * Error handling if the total points or remove button is pressed and the ID #
 * field is blank. Error handling if the total points or remove button is
 * pressed and ID # inputted does not match an ID # in the records. Changed
 * icons at the top of the GUI.
 *
 * Finished: Sun. Apr. 15/18
 *
 */
public class sTrangWk9Flight extends javax.swing.JFrame {

    ArrayList<Passengers> records = new ArrayList();

    /**
     * Creates new form sTrangWk9Flight
     */
    public sTrangWk9Flight() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        airplaneIcon = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        airplaneMirrorredIcon = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        firstNameIn = new javax.swing.JTextField();
        lastNameIn = new javax.swing.JTextField();
        week1 = new javax.swing.JLabel();
        week2 = new javax.swing.JLabel();
        week3 = new javax.swing.JLabel();
        week4 = new javax.swing.JLabel();
        week1In = new javax.swing.JTextField();
        week2In = new javax.swing.JTextField();
        week3In = new javax.swing.JTextField();
        week4In = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        list = new javax.swing.JButton();
        totalPoints = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        airlinesPointsDataOut = new javax.swing.JTextArea();
        errorHandlingOut = new javax.swing.JTextField();
        totalPointsInstructions = new javax.swing.JLabel();
        totalPointsInstructions2 = new javax.swing.JLabel();
        removeInstructions = new javax.swing.JLabel();
        removeInstructions2 = new javax.swing.JLabel();
        idNumber = new javax.swing.JLabel();
        idNumberIn = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Airline Points");

        airplaneIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sydney\\Documents\\NetBeansProjects\\sTrangWk9Flight\\Airplane.png")); // NOI18N

        title.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 51, 255));
        title.setText("Airline Points");

        airplaneMirrorredIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sydney\\Documents\\NetBeansProjects\\sTrangWk9Flight\\airplaneMirrored.png")); // NOI18N

        firstName.setText("First Name:");

        lastName.setText("Last Name:");

        week1.setText("Week 1 Points:");

        week2.setText("Week 2 Points:");

        week3.setText("Week 3 Points:");

        week4.setText("Week 4 Points:");

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        list.setText("List");
        list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listActionPerformed(evt);
            }
        });

        totalPoints.setText("Total Points");
        totalPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPointsActionPerformed(evt);
            }
        });

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        airlinesPointsDataOut.setColumns(20);
        airlinesPointsDataOut.setRows(5);
        jScrollPane1.setViewportView(airlinesPointsDataOut);

        totalPointsInstructions.setText("To access the total points of a passenger, enter the ID number assigned");

        totalPointsInstructions2.setText("upon resigtration and click total points.");

        removeInstructions.setText("To remove a passenger from the system, enter the ID number assigned");

        removeInstructions2.setText("upon resigtration and click remove.");

        idNumber.setText("ID #:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(airplaneIcon)
                                        .addGap(50, 50, 50)
                                        .addComponent(title))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(firstName)
                                        .addGap(18, 18, 18)
                                        .addComponent(firstNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lastName)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(airplaneMirrorredIcon))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(lastNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(week2)
                                                .addComponent(week3)
                                                .addComponent(week4)
                                                .addComponent(week1)
                                                .addComponent(idNumber))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(week4In, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                                .addComponent(week3In, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                                .addComponent(week2In, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                                .addComponent(week1In, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                                .addComponent(idNumberIn, javax.swing.GroupLayout.Alignment.LEADING)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(list)
                                                .addComponent(add))))
                                    .addGap(46, 46, 46)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(totalPoints))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(476, 476, 476)
                                            .addComponent(exit))
                                        .addComponent(totalPointsInstructions2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(totalPointsInstructions, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(removeInstructions)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(remove))))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorHandlingOut, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeInstructions2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(airplaneIcon, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(airplaneMirrorredIcon, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(title))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstName)
                    .addComponent(firstNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastName)
                    .addComponent(lastNameIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(week1In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(week1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(week2In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(week2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(week3In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(week3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(week4In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(week4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(list)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idNumberIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idNumber)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalPoints)
                    .addComponent(totalPointsInstructions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalPointsInstructions2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeInstructions2)
                .addGap(19, 19, 19)
                .addComponent(errorHandlingOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* A method called when the exit button is pressed. */
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    /* A method called when the add button is pressed. */
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        Passengers passengerInfo;
        String sFullName, sIDNumber;
        int iWeek1, iWeek2, iWeek3, iWeek4;

        //Checks for empty fields
        if (firstNameIn.getText().isEmpty()
                || lastNameIn.getText().isEmpty()
                || week1In.getText().isEmpty()
                || week2In.getText().isEmpty()
                || week3In.getText().isEmpty()
                || week4In.getText().isEmpty()) {
            errorHandlingOut.setText("All fields must be filled in.");
        } else {
            //Gets input from user
            sFullName = firstNameIn.getText() + " " + lastNameIn.getText();
            sIDNumber = Integer.toString(assignIDNumber());
            iWeek1 = Integer.parseInt(week1In.getText());
            iWeek2 = Integer.parseInt(week2In.getText());
            iWeek3 = Integer.parseInt(week3In.getText());
            iWeek4 = Integer.parseInt(week4In.getText());

            //passengerInfo is sent to the class Passengers
            passengerInfo = new Passengers(sFullName, sIDNumber, iWeek1, iWeek2, iWeek3, iWeek4);
            records.add(passengerInfo);
        }
    }//GEN-LAST:event_addActionPerformed

    /*A function that assigns a pseudo-random ID # to a passenger upon registration*/
    public int assignIDNumber() {
        int iIDNumber = (int) (Math.random() * 1000);   //The ID # will be 3 digits
        int counter = 0;
        //Checks if an ID # created matches another in the records
        while (counter < records.size()
                && Integer.toString(iIDNumber).equals(records.get(counter).sIDNumber)) {
            iIDNumber = (int) (Math.random() * 1000);   //Creates new 3-digit ID #
            counter++;
        }
        return iIDNumber;
    }

    /* A method called when the list button is pressed. */
    private void listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listActionPerformed
        String sTemp = "";
        //Lists all passenger information
        for (int counter = 0; counter < records.size(); counter++) {
            sTemp += "Passenger: " + records.get(counter).sFullName + "\n"
                    + "ID #: " + records.get(counter).sIDNumber + "\n"
                    + "Week 1 Points: " + records.get(counter).iWeek1 + "\n"
                    + "Week 2 Points: " + records.get(counter).iWeek2 + "\n"
                    + "Week 3 Points: " + records.get(counter).iWeek3 + "\n"
                    + "Week 4 Points: " + records.get(counter).iWeek4 + "\n\n";
        }
        airlinesPointsDataOut.setText(sTemp);

        //If the records ArrayList is empty
        if (records.isEmpty()) {
            errorHandlingOut.setText("There are no passengers in the records.");
        }
    }//GEN-LAST:event_listActionPerformed

    /* A method called when the total points button is pressed. */
    private void totalPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPointsActionPerformed
        //If the ID # field is empty 
        if (idNumberIn.getText().isEmpty()) {
            errorHandlingOut.setText("Sorry, that ID # cannot be found.");
        }

        //If the records ArrayList is empty
        if (records.isEmpty()) {
            errorHandlingOut.setText("There are no passengers in the records.");
        }

        //Checks if the ID inputed matches another in the records ArrayList
        for (int counter = 0; counter < records.size(); counter++) {
            //The ID # inputted matches an ID # in the records
            if (idNumberIn.getText().equals(records.get(counter).sIDNumber)) {
                int iTotalPoints
                        = records.get(counter).iWeek1
                        + records.get(counter).iWeek2
                        + records.get(counter).iWeek3
                        + records.get(counter).iWeek4;
                airlinesPointsDataOut.setText(records.get(counter).sFullName
                        + "'s Total Points are " + iTotalPoints + ".");
                //Determines if a passenger qualifies for a bonus
                if (iTotalPoints > 5000) { //A passeneger qualifies for the bonus
                    airlinesPointsDataOut.append("\n" + "Bonus: 1000");
                    iTotalPoints += 1000;
                    airlinesPointsDataOut.append("\n" + "New Total Points: " + iTotalPoints);
                } else { //A passeneger does not qualify for the bonus
                    airlinesPointsDataOut.append("\n" + "Bonus: 0");
                }
                //Clears all input text fields to prepare for next entries
                firstNameIn.setText(null);
                lastNameIn.setText(null);
                week1In.setText(null);
                week2In.setText(null);
                week3In.setText(null);
                week4In.setText(null);
                idNumberIn.setText(null);
                //Clears error handling 
                errorHandlingOut.setText(null);
                break; //Stops checking since an ID # match has been found
            } else { //If there is not match
                errorHandlingOut.setText("Sorry, that ID # cannot be found.");
            }
        }
    }//GEN-LAST:event_totalPointsActionPerformed

    /* A method called when the remove button is pressed. */
    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        //If the ID # field is empty 
        if (idNumberIn.getText().isEmpty()) {
            errorHandlingOut.setText("Sorry, that ID # cannot be found.");
        }

        //If the records ArrayList is empty
        if (records.isEmpty()) {
            errorHandlingOut.setText("There are no passengers in the records.");
        }

        for (int counter = 0; counter < records.size(); counter++) {
            //Determines if the ID # inputted matches one in the records
            if (idNumberIn.getText().equals(records.get(counter).sIDNumber)) {
                records.remove(counter); //Removes passenger from records
                //Clears all input text fields to prepare for next entries
                firstNameIn.setText(null);
                lastNameIn.setText(null);
                week1In.setText(null);
                week2In.setText(null);
                week3In.setText(null);
                week4In.setText(null);
                idNumberIn.setText(null);
                //Clears error handling 
                errorHandlingOut.setText(null);
                break; //Stops checking since an ID # match has been found
            } else { //If there is not match
                errorHandlingOut.setText("Sorry, that ID # cannot be found.");
            }
        }
    }//GEN-LAST:event_removeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sTrangWk9Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sTrangWk9Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sTrangWk9Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sTrangWk9Flight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sTrangWk9Flight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextArea airlinesPointsDataOut;
    private javax.swing.JLabel airplaneIcon;
    private javax.swing.JLabel airplaneMirrorredIcon;
    private javax.swing.JTextField errorHandlingOut;
    private javax.swing.JButton exit;
    private javax.swing.JLabel firstName;
    private javax.swing.JTextField firstNameIn;
    private javax.swing.JLabel idNumber;
    private javax.swing.JTextField idNumberIn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastName;
    private javax.swing.JTextField lastNameIn;
    private javax.swing.JButton list;
    private javax.swing.JButton remove;
    private javax.swing.JLabel removeInstructions;
    private javax.swing.JLabel removeInstructions2;
    private javax.swing.JLabel title;
    private javax.swing.JButton totalPoints;
    private javax.swing.JLabel totalPointsInstructions;
    private javax.swing.JLabel totalPointsInstructions2;
    private javax.swing.JLabel week1;
    private javax.swing.JTextField week1In;
    private javax.swing.JLabel week2;
    private javax.swing.JTextField week2In;
    private javax.swing.JLabel week3;
    private javax.swing.JTextField week3In;
    private javax.swing.JLabel week4;
    private javax.swing.JTextField week4In;
    // End of variables declaration//GEN-END:variables
}
